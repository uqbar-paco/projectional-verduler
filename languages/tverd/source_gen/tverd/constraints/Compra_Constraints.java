package tverd.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SPropertyId;
import jetbrains.mps.smodel.runtime.PropertyConstraintsDescriptor;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.base.BasePropertyConstraintsDescriptor;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class Compra_Constraints extends BaseConstraintsDescriptor {
  public Compra_Constraints() {
    super(MetaIdFactory.conceptId(0x1f73cc9c8de4b2fL, 0xa1ea262f9788b306L, 0x731dfa77dba80590L));
  }
  @Override
  protected Map<SPropertyId, PropertyConstraintsDescriptor> getNotDefaultSProperties() {
    Map<SPropertyId, PropertyConstraintsDescriptor> properties = new HashMap<SPropertyId, PropertyConstraintsDescriptor>();
    properties.put(MetaIdFactory.propId(0x1f73cc9c8de4b2fL, 0xa1ea262f9788b306L, 0x731dfa77dba80590L, 0x731dfa77dba805b4L), new BasePropertyConstraintsDescriptor(MetaIdFactory.propId(0x1f73cc9c8de4b2fL, 0xa1ea262f9788b306L, 0x731dfa77dba80590L, 0x731dfa77dba805b4L), this) {
      @Override
      public boolean hasOwnValidator() {
        return true;
      }
      @Override
      public boolean validateValue(SNode node, String propertyValue) {
        String propertyName = "cantidad";
        return (SPropertyOperations.getInteger(propertyValue)) > 0;
      }
    });
    return properties;
  }
}
